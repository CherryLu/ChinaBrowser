package com.chinabrowser.adapter;import android.content.Context;import android.os.Parcelable;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.RelativeLayout;import com.chinabrowser.R;import com.chinabrowser.bean.Content;import com.chinabrowser.utils.GlideUtils;import java.util.List;public class ImagePagerAdapter extends PagerAdapter {	private Context context;	private RelativeLayout[] mImageViews;	public OnClickListener slideClick = new OnClickListener() {		@Override		public void onClick(View v) {		}	};	private List<Content> mProtocol;	public ImagePagerAdapter(List<Content> protocol, Context context) {		this.mProtocol = protocol;		this.context = context;		int size = mProtocol.size();		if (size == 2)			size = 4;		mImageViews = new RelativeLayout[size];		for (int i = 0; i < size; i++) {			RelativeLayout rl = (RelativeLayout) LayoutInflater.from(context).inflate(R.layout.slide_image_layout, null);			ImageView imageView = (ImageView) rl.findViewById(R.id.image);			ImageView clickview = (ImageView) rl.findViewById(R.id.clickview);			Content item = mProtocol.get(i% mProtocol.size());			clickview.setTag(item);			clickview.setOnClickListener(slideClick);			GlideUtils.loadImageView(context,item.getImage_url(),imageView);			mImageViews[i] = rl;		}	}	@Override	public void destroyItem(ViewGroup container, int position, Object object) {	}	@Override	public int getCount() {		if (mProtocol.size() <= 1)			return mProtocol.size();		return Integer.MAX_VALUE;	}	@Override	public Object instantiateItem(ViewGroup view, int position) {		if (mImageViews.length == 0)			return null;		try {			((ViewPager) view).addView(mImageViews[position					% mImageViews.length], 0);			View v = (View) mImageViews[position % mImageViews.length];			Content item = mProtocol.get(position					% mProtocol.size());			ImageView imageView = (ImageView) v.findViewById(R.id.image);			GlideUtils.loadImageView(context,item.getImage_url(),imageView);		} catch (Exception e) {			e.printStackTrace();		}		return mImageViews[position % mImageViews.length];	}	@Override	public boolean isViewFromObject(View view, Object object) {		return view.equals(object);	}	@Override	public void restoreState(Parcelable state, ClassLoader loader) {	}	@Override	public Parcelable saveState() {		return null;	}}